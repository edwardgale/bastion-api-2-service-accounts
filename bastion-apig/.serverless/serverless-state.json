{
  "service": {
    "service": "bastion-apig",
    "serviceObject": {
      "name": "bastion-apig"
    },
    "provider": {
      "stage": "dev",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._@'\",\\-\\/\\(\\)*?]+?)}",
      "name": "aws",
      "runtime": "nodejs12.x",
      "region": "eu-west-1",
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "API using VPC Link",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "TesterLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/bastion-apig-dev-tester"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "bastion-apig",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/bastion-apig-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/bastion-apig-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "bastion-apig",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                    ]
                  ]
                }
              ]
            }
          },
          "TesterLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/bastion-apig/dev/1581025783871-2020-02-06T21:49:43.871Z/bastion-apig.zip"
              },
              "FunctionName": "bastion-apig-dev-tester",
              "Handler": "private-api-tester.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "VPCE_DNS_NAME": "vpce-0af67ca1e362bc54f-5fpnxfg2.execute-api.eu-west-1.vpce.amazonaws.com",
                  "API_GW_ENDPOINT": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Ref": "ApiGatewayRestApi"
                        },
                        ".execute-api.eu-west-1.amazonaws.com"
                      ]
                    ]
                  }
                }
              },
              "VpcConfig": {
                "SecurityGroupIds": [
                  "sg-02c7834771b3ecaba"
                ],
                "SubnetIds": [
                  "subnet-040787fb10bf8b33e"
                ]
              }
            },
            "DependsOn": [
              "TesterLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "TesterLambdaVersion5UmRRud9wvuH5x6RJ7b9NFtSa5MiAczfBmzdfQ8Jwvc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "TesterLambdaFunction"
              },
              "CodeSha256": "zdxt6Fa5uXH19OCX84clXBPQiS6U4jC+o2zXVQp8SVM="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Description": "VPC Link Test",
              "EndpointConfiguration": {
                "Types": [
                  "REGIONAL"
                ]
              },
              "Name": "bastion-apig"
            }
          },
          "ApiGatewayResourceProxy": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "{proxy+}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodHelloGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "HttpMethod": "GET",
              "Integration": {
                "ConnectionId": "ji4b5d",
                "ConnectionType": "VPC_LINK",
                "IntegrationHttpMethod": "POST",
                "Type": "HTTP_PROXY",
                "Uri": "https://blah.com:443/blah"
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceProxy"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayDeployment157688238695": {
            "Type": "AWS::ApiGateway::Deployment",
            "DependsOn": "ApiGatewayMethodHelloGet",
            "Properties": {
              "Description": "Description of stage",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "TesterLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "TesterLambdaVersion5UmRRud9wvuH5x6RJ7b9NFtSa5MiAczfBmzdfQ8Jwvc"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "pluginsData": {},
    "functions": {
      "tester": {
        "handler": "private-api-tester.handler",
        "vpc": {
          "securityGroupIds": [
            "sg-02c7834771b3ecaba"
          ],
          "subnetIds": [
            "subnet-040787fb10bf8b33e"
          ]
        },
        "environment": {
          "VPCE_DNS_NAME": "vpce-0af67ca1e362bc54f-5fpnxfg2.execute-api.eu-west-1.vpce.amazonaws.com",
          "API_GW_ENDPOINT": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "ApiGatewayRestApi"
                },
                ".execute-api.eu-west-1.amazonaws.com"
              ]
            ]
          }
        },
        "events": [],
        "name": "bastion-apig-dev-tester",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x"
      }
    },
    "resources": {
      "Description": "API using VPC Link",
      "Resources": {
        "ApiGatewayRestApi": {
          "Type": "AWS::ApiGateway::RestApi",
          "Properties": {
            "Description": "VPC Link Test",
            "EndpointConfiguration": {
              "Types": [
                "REGIONAL"
              ]
            },
            "Name": "bastion-apig"
          }
        },
        "ApiGatewayResourceProxy": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "ApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "{proxy+}",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodHelloGet": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "ApiKeyRequired": false,
            "AuthorizationType": "NONE",
            "HttpMethod": "GET",
            "Integration": {
              "ConnectionId": "ji4b5d",
              "ConnectionType": "VPC_LINK",
              "IntegrationHttpMethod": "POST",
              "Type": "HTTP_PROXY",
              "Uri": "https://blah.com:443/blah"
            },
            "ResourceId": {
              "Ref": "ApiGatewayResourceProxy"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayDeployment157688238695": {
          "Type": "AWS::ApiGateway::Deployment",
          "DependsOn": "ApiGatewayMethodHelloGet",
          "Properties": {
            "Description": "Description of stage",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "StageName": "dev"
          }
        }
      },
      "Outputs": {}
    },
    "serviceFilename": "serverless.yml",
    "layers": {},
    "artifact": "/Users/edwardgale/work/bastion-api-2-service-accounts/bastion-apig/.serverless/bastion-apig.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/bastion-apig/dev/1581025783871-2020-02-06T21:49:43.871Z",
    "artifact": "bastion-apig.zip"
  }
}